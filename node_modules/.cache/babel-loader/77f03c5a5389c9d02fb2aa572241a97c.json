{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/React Course/01-starting-setup/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  let selectedYear = \"2020\";\n  let newFilterYear = [];\n\n  const filterChangeHandler = selected_Year => {\n    setFilteredYear(selected_Year);\n    selectedYear = selected_Year;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), props.items.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)), newFilterYear = props.items.filter(expense => expense.date.year === selectedYear), newFilterYear]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/user/Desktop/React Course/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","Card","ExpenseItem","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","selectedYear","newFilterYear","filterChangeHandler","selected_Year","items","map","expense","title","amount","date","id","filter","year"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;AACA,MAAIQ,YAAY,GAAG,MAAnB;AACA,MAAIC,aAAa,GAAG,EAApB;;AACA,QAAMC,mBAAmB,GAAIC,aAAD,IAAmB;AAC7CJ,IAAAA,eAAe,CAACI,aAAD,CAAf;AACAH,IAAAA,YAAY,GAAGG,aAAf;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEL,YADZ;AAEE,QAAA,cAAc,EAAEI;AAFlB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGL,KAAK,CAACO,KAAN,CAAYC,GAAZ,CAAiBC,OAAD,iBACf,QAAC,WAAD;AAEE,QAAA,KAAK,EAAEA,OAAO,CAACC,KAFjB;AAGE,QAAA,MAAM,EAAED,OAAO,CAACE,MAHlB;AAIE,QAAA,IAAI,EAAEF,OAAO,CAACG;AAJhB,SACOH,OAAO,CAACI,EADf;AAAA;AAAA;AAAA;AAAA,cADD,CALH,EAcKT,aAAa,GAAGJ,KAAK,CAACO,KAAN,CAAYO,MAAZ,CACdL,OAAD,IAAaA,OAAO,CAACG,IAAR,CAAaG,IAAb,KAAsBZ,YADpB,CAdrB,EAkBGC,aAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAjCD;;GAAML,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  let selectedYear = \"2020\";\n  let newFilterYear = [];\n  const filterChangeHandler = (selected_Year) => {\n    setFilteredYear(selected_Year);\n    selectedYear = selected_Year;\n  };\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        {props.items.map((expense) => (\n          <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n          />\n        ))}\n        {\n          (newFilterYear = props.items.filter(\n            (expense) => expense.date.year === selectedYear\n          ))\n        }\n        {newFilterYear}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}